name: Release Tamagotchi

permissions:
  contents: write

env:
  PRODUCT_NAME: 'AIRI'
  BUNDLE_NAME: ''

on:
  release:
    types:
      - prereleased
  workflow_dispatch:
    inputs:
      build_only:
        description: Build only
        required: false
        default: false
        type: boolean
      artifacts_only:
        description: Build and upload artifacts only
        required: false
        default: false
        type: boolean
      tag:
        description: Specific tag/commit for the release (leave empty to auto-detect latest tag)
        required: false
        type: string
  schedule:
    - cron: '0 0 * * *'

jobs:
  build:
    name: Build
    strategy:
      matrix:
        include:
          - os: macos-13
            artifact: darwin-x64
            ext: dmg
          - os: macos-latest
            artifact: darwin-arm64
            ext: dmg
          - os: ubuntu-latest
            artifact: linux-x64
            ext: AppImage
          - os: ubuntu-24.04-arm
            artifact: linux-arm64
            ext: AppImage
          - os: windows-latest
            artifact: windows-x64-setup
            ext: exe
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v5
      - uses: pnpm/action-setup@v4
        with:
          run_install: false
      - uses: actions/setup-node@v5
        with:
          node-version: lts/*
          cache: pnpm
      - run: pnpm install --frozen-lockfile
      - name: Build
        run: |
          pnpm run -F @proj-airi/stage-tamagotchi build
      - id: version
        run: |
          echo VERSION=$(node -p "JSON.parse(require('node:fs').readFileSync(require('node:path').join('apps', 'stage-tamagotchi', 'package.json')).toString('utf-8')).version") >> $GITHUB_ENV
      - name: Upload To GitHub Releases
        uses: softprops/action-gh-release@v2
        with:
          files: dist/AIRI-${{ steps.version.outputs.VERSION }}-${{ matrix.artifact }}.${{ matrix.ext }}
          generate_release_notes: true
